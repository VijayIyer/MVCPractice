@model IEnumerable<MVCPractice.Address>

<script src="~/ColumnFilters.js"></script>
<h2>Index</h2>

@*<script>
    $(document).ready(function () {


        $(".glyphicon.glyphicon-filter").click(function (e) {
            filterindex = $(event.target).closest('th').index();

            $("#dialog #filterclause").val($("th:eq(" + filterindex + ")").data("filterclause"));
            $("#dialog #FirstBox").val($("th:eq(" + filterindex + ")").data("filtervalue"));
            $("#dialog").dialog({

                position: { at: "right bottom", my: "left top", of: $(e.target) }
            });
            $("#dialog").dialog("open");
        });
        $("#close").click(function () {

            $("#dialog").dialog("close");
        });

        $("#ApplyFilter").click(function (e) {

            e.preventDefault();

            $("th:eq(" + filterindex + ")").data("filterclause", $("#filterclause").find("option:selected").text());
            $("th:eq(" + filterindex + ")").data("filtervalue", $("#FirstBox").val());
            FilterAddressTable();
        });


        function FilterAddressTable() {

            $("#AddressTable tr").each(function () {

                $(this).show();
            });

            $("#AddressTable th").each(function () {

                var headerindex = $(this).index();


                $(this).closest("table").find("tr:has(td):visible").each(function () {

                    if (!$("th:eq(" + headerindex + ")").data("filtervalue")) {
                        $("th:eq(" + headerindex + ")").find("span:has(i.glyphicon.glyphicon-filter)").find("i.glyphicon.glyphicon-filter").css("visibility", "hidden");
                    }
                    else {

                        $("th:eq(" + headerindex + ")").find("span:has(i.glyphicon.glyphicon-filter)").find("i.glyphicon.glyphicon-filter").css("visibility", "visible");

                        switch ($("th:eq(" + headerindex + ")").data("filterclause")) {

                            case "Equals":

                                if ($(this).find("td:eq(" + headerindex + ")").text() === $("th:eq(" + headerindex + ")").data("filtervalue")) {
                                    $(this).show();
                                }
                                else {
                                    $(this).hide();
                                }
                                break;
                            case "Contains":

                                if ($(this).find("td:eq(" + headerindex + ")").is(":contains(" + $("th:eq(" + headerindex + ")").data("filtervalue") + ")")) {
                                    $(this).show();
                                }
                                else {
                                    $(this).hide();
                                } break;
                            case "Does not Contain":

                                if ($(this).find("td:eq(" + headerindex + ")").is(":not(:contains(" + $("th:eq(" + headerindex + ")").data("filtervalue") + "))")) {
                                    $(this).show();
                                }
                                else {
                                    $(this).hide();
                                } break;
                            case "Not Equal to": if ($(this).find("td:eq(" + headerindex + ")").text() != $("th:eq(" + headerindex + ")").data("filtervalue")) {
                                $(this).show();
                            }
                            else {
                                $(this).hide();
                            }
                                break;
                        }
                    }
                });
            });
        }

        $("#ClearFilter").click(function (e) {

            e.preventDefault();

            $("th:eq(" + filterindex + ")").data("filterclause", "");
            $("th:eq(" + filterindex + ")").data("filtervalue", "");
            FilterAddressTable();
        });
    });


</script>*@ 
   
<p>
    @Html.ActionLink("Create New","Create")
</p>
<div id="CreateView">
<table class="table" id="AddressTable">
    <tr>
        <th data-filterclause="" data-filtervalue="">
            <span>  @Html.DisplayNameFor(model => model.AddressLine1)</span>
            <span style="float:right"><i class="glyphicon glyphicon-filter"></i></span>
        </th>
        <th data-filterclause="" data-filtervalue="">
            <span> @Html.DisplayNameFor(model => model.AddressLine2)</span>
            <span style="float:right"><i class="glyphicon glyphicon-filter"></i></span>
        </th>
        <th data-filterclause="" data-filtervalue="">
           <span>@Html.DisplayNameFor(model => model.City)</span> 
            <span style="float:right"><i class="glyphicon glyphicon-filter"></i></span>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StateProvince)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CountryRegion)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PostalCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.rowguid)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ModifiedDate)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.AddressLine1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AddressLine2)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StateProvince)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CountryRegion)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PostalCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.rowguid)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ModifiedDate)
        </td>
        <td>
            @Ajax.ActionLink("Edit", "Edit", new { id=item.AddressID },new AjaxOptions {UpdateTargetId = "DynamicView",InsertionMode = InsertionMode.ReplaceWith}) |
            @Ajax.ActionLink("Details", "Details", new { id=item.AddressID }, new AjaxOptions { UpdateTargetId = "DynamicView", InsertionMode = InsertionMode.ReplaceWith } ) |
            @Ajax.ActionLink("Delete", "Delete", new { id=item.AddressID }, new AjaxOptions { UpdateTargetId = "DynamicView", InsertionMode = InsertionMode.ReplaceWith })
        </td>
    </tr>
}

</table>
</div>
