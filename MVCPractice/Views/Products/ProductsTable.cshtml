@model PagedList.IPagedList<MVCPractice.Product>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    Layout = null;
}
<div id="ProductsTable">
    <table class="table">
        <tr>
            <th data-filterclause="" data-filtervalue="">
              <span>@Html.ActionLink("Name ", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter });</span>
               <span style="float:right"><i class="glyphicon glyphicon-filter"></i></span>  
            </th>
            <th data-filterclause="" data-filtervalue="">
             <span>Product Number</span>
                <span style="float:right"><i class="glyphicon glyphicon-filter"></i></span> 
            </th>
            <th data-filterclause="" data-filtervalue="">
                <span>Color</span>
                <span style="float:right"><i class="glyphicon glyphicon-filter"></i></span> 
            </th>
            <th>
                Standard Cost
            </th>
            <th>
                List Price
            </th>
            <th>
                Size
            </th>
            <th>
                Weight
            </th>
            <th>
                @Html.ActionLink("Sell Start Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                End Date
            </th>

            <th>
                Category Name
            </th>
            <th>
                Model Name
            </th>
            <th>Actions</th>
        </tr>

        @foreach (var item in Model)
        {
            using (Html.BeginForm("Delete", "Products", new { id = item.ProductID }))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Color)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StandardCost)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ListPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Size)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Weight)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SellStartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SellEndDate)
                    </td>
                     <td>
                        @Html.DisplayFor(modelItem => item.ProductCategory.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductModel.Name)
                    </td>
                    <td>
                     <span>
                         
                       
                            
                                <a href="@Url.Action("Edit", new { id = item.ProductID })">
                                    <span class="glyphicon glyphicon-edit"></span>
                                    </a>
                            
                       

                            <button type="submit" value="Delete" data-toggle="tooltip" title="Delete">
                            <span class="glyphicon glyphicon-trash"></span> 
                            </button> 
                        </span>   
                      @*<input type="submit" value="Delete" style="background:none; border-width:0px; color:blue; text-decoration:underline;" onclick="return confirm('Are you sure you want to delete Product with Id = @item.ProductID')" />*@
                    </td>
                </tr>
            }
        }

    </table>
 
    <<br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
