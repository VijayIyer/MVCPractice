@model MVCPractice.Product
@using MVCPractice.CustomHelpers
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <script>
        $(document).ready(function () {
            $('#ProductCategoryId').change(function () {
                var SelectedProductCategory = $("#ProductCategoryId").val();
                var SubCategory = $('#SubCategory');
                SubCategory.empty();
                if (SelectedProductCategory != null && SelectedProductCategory != '') {
                    $.getJSON('@Url.Action("GetSubCategory")', { SelectedProductCategory: SelectedProductCategory }, function (regions) {
                        if (regions != null && !jQuery.isEmptyObject(regions)) {
                            SubCategory.append($('<option/>', {
                                value: "",
                                text: "Select Sub Category"
                            }));
                            $.each(regions, function (index, region) {
                                SubCategory.append($('<option/>', {
                                    value: region.Id,
                                    text: region.Name
                                }));
                            });
                        };
                    });
                };
            });

          


        });
         
        var openFile = function (event) {
            var input = event.target;

            var reader = new FileReader();
            reader.onloadend = function () {
               
                var output = document.getElementById('ThumbNailPhoto');
                if (reader.result)
                {
                    output.value = reader.result;
                }
                
            };
            reader.readAsBinaryString(input.files[0]);

           
        };
        
    </script>
</head>
<h2>Create</h2>


@using (Html.BeginForm("Create", "Products"))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
      
         <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Color", ViewBag.Colors as SelectList, "Select Color", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            <label class="control-label col-md-2">Color</label>
                <div class="col-md-10">
                <input list="color" class="form-control"/>
                
                 @Html.Datalist("color", ViewBag.Colors as SelectList)
            </div>
        </div>

       <div class="form-group">
            @Html.LabelFor(model => model.StandardCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StandardCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StandardCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ListPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ListPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ListPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductCategoryID,"Parent Product Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ParentCategory", ViewBag.ProductCategoryId as SelectList ,"Select Parent Product Category", htmlAttributes: new { @class = "form-control",@id ="ProductCategoryId" })
                @Html.ValidationMessageFor(model => model.ProductCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class = "control-label col-md-2">Child Product Category</label>
            <div class="col-md-10">
                <select class="form-control" id="SubCategory" name="ProductCategoryId">
                    
                 </select>
                 @Html.ValidationMessageFor(model => model.ProductCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
      <div class="form-group">
            @Html.LabelFor(model => model.ProductModelID, "Product Model", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductModelId", ViewBag.ProductModelId as SelectList,"Select Product Model",htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductModelID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*@<div class="form-group">
            @Html.LabelFor(model => model.SellStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SellStartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SellStartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SellEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SellEndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SellEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

      <div class="form-group">
            @Html.LabelFor(model => model.DiscontinuedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiscontinuedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiscontinuedDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ThumbNailPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="ThumbNailPhoto" name="ThumbNailPhoto" />
                @Html.ValidationMessageFor(model => model.ThumbNailPhoto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ThumbnailPhotoFileName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="ThumbnailPhotoFileName" name="ThumbnailPhotoFileName" class="form-control" onchange='openFile(event)'/>

                @Html.ValidationMessageFor(model => model.ThumbnailPhotoFileName, "", new { @class = "text-danger" })
                </div>
        </div>

        @*@<div class="form-group">
            @Html.LabelFor(model => model.rowguid, htmlAttributes: new { @class = "control-label col-md-2" })
            @<div class="col-md-10">
                @Html.EditorFor(model => model.rowguid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rowguid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            @<div class="col-md-10">
                @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
}
